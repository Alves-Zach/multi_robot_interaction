<?xml version="1.0"?>
<launch>
  <!-- load the urdf into the parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find legs_description)/urdf/legs_fixed_base.urdf.xacro'"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="controllers" default="position_torque_controller torque_controller"/> 

  <!-- Launch empty world in gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="output" value="screen"/>
  </include> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model legs -param robot_description"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find legs_controller)/config/legs_ros_control.yaml" command="load"/>

  <!-- load joint state controller -->
  <node name="joint_state_spawner" pkg="controller_manager" type="spawner" respawn="false"
     ns="/legs" args="joint_state_controller"/>

  <!-- load other controllers in stopped state -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
     ns="/legs" args="--stopped $(arg controllers)"/> 

  <!-- The robot_state_publisher reads the urdf from /robot_description parameter
       and listens to joint information on the /joint_states topic -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
  <remap from="/joint_states" to="/legs/joint_states" />
  </node>

  <!-- The joint state publisher will be launched with a gui, read the urdf from /robot_description 
       and publish the joint values on /joint_states 
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="true" /> 
  </node> -->

  <!-- rviz will enable us to see the robot -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find legs_description)/rviz/view_robot.rviz"/>

  <!-- CORC -->
  <node name="legs_controller_node" pkg="legs_controller" type="legs_controller" output="screen"/> 

</launch>

