#!/usr/bin/env python
PACKAGE = "multi_robot_interaction"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

connection_enum = gen.enum([
                   gen.const("use_slider", int_t, 0, "use slider"),
                   gen.const("soft", int_t, 1, "stiff connection"),
                   gen.const("stiff", int_t, 2, "soft connection"),],
                   "Connection Mode")

gen.add("connection_mode", int_t, 0, "Interaction Mode", 0, 0, 2, edit_method=connection_enum)

virtual_env_hip = gen.add_group("A_Hip")
virtual_env_hip.add("stiffness_hip", double_t, 0, "Hip Interaction Stiffness", 38, 0, 100)
virtual_env_hip.add("damping_hip", double_t, 1, "Hip Interaction Damping", 4, 0, 40)
virtual_env_hip.add("neutral_length_hip", double_t, 1, "Hip Neutral Length", 0, 0, 30)

virtual_env_knee = gen.add_group("B_Knee")
virtual_env_knee.add("stiffness_knee", double_t, 0, "Knee Interaction Stiffness", 38, 0, 100)
virtual_env_knee.add("damping_knee", double_t, 1, "Knee Interaction Damping", 4, 0, 40)
virtual_env_knee.add("neutral_length_knee", double_t, 1, "Knee Neutral Length", 0, 0, 30)

virtual_env_x = gen.add_group("C_Ankle_X")
virtual_env_x.add("whole_exo",   bool_t,   2, "Whole Exo command",  True)
virtual_env_x.add("stiffness_x", double_t, 0, "X Interaction Stiffness", 38, 0, 500)
virtual_env_x.add("damping_x", double_t, 1, "X Interaction Damping", 4, 0, 200)
virtual_env_x.add("neutral_length_x", double_t, 1, "X Neutral Length", 0, 0, 0.3)

virtual_env_y = gen.add_group("D_Ankle_Y")
virtual_env_y.add("stiffness_y", double_t, 0, "Y Interaction Stiffness", 38, 0, 500)
virtual_env_y.add("damping_y", double_t, 1, "Y Interaction Damping", 4, 0, 200)
virtual_env_y.add("neutral_length_y", double_t, 1, "Y Neutral Length", 0, 0, 0.3)

ankle_track = gen.add_group("E_Ankle_Tracking")
ankle_track.add("desired_x", double_t, 0, "Desired X pos (m)", 0, -0.7, 0.7)
ankle_track.add("desired_y", double_t, 1, "Desired Y pos (m)", 0, -0.1, 1.2)

interaction_enum = gen.enum([
    gen.const("no_interaction", int_t, 0, "controller 0"),
    gen.const("joint_space_bi_lateral", int_t, 1, "controller 1"),
    gen.const("joint_space_uni_lateral", int_t, 2, "controller 2"),
    gen.const("task_space_bi_lateral", int_t, 3, "controller 3"),
    gen.const("task_space_uni_lateral", int_t, 4, "controller 4"),],
    "Example Controller Mode")

gen.add("interaction_mode", int_t, 0, "Interaction Mode", 0, 0, 4, edit_method=interaction_enum)

exit(gen.generate(PACKAGE, "multi_robot_interaction", "dynamic_params"))